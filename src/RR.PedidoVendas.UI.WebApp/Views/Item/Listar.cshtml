@model IEnumerable<RR.PedidoVendas.Application.ViewModels.ItemViewModel>

<div class="container">
    <div class="row centered-form">
        <div class="col-md-12">
            <div class="panel panel-default">
                <div class="panel-heading">
                    <h3 class="panel-title">Itens do Pedido</h3>
                </div>
                <div class="panel-body">
                    <div class="row">
                        <div class="col-xs-6 col-sm-6 col-md-6">
                            <div class="form-group">
                                @Html.Label("Produto", htmlAttributes: new { @class = "control-label" })
                                @Html.DropDownList("ProdutoId", null, string.Empty, htmlAttributes: new { @class = "form-control" })
                            </div>
                        </div>
                        <div class="col-xs-6 col-sm-6 col-md-6">
                            <div class="form-group">
                                @Html.Label("Quantidade", htmlAttributes: new { @class = "control-label" })
                                <input type="text" id="Quantidade" name="Quantidade" class="form-control" />
                            </div>
                        </div>
                    </div>

                    <a href="#" onclick="AdicionarItem();" class="btn btn-info btn-block">Adicionar Item</a>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="container">
    <div class="panel panel-default">
        <div class="panel-heading">
            <strong>Itens Adicionados ao Pedido</strong>
        </div>
        <table class="table table-hover">
            <tr>
                <th>@Html.DisplayNameFor(model => model.Produto.Descricao)</th>
                <th>@Html.DisplayNameFor(model => model.Quantidade)</th>
                <th>Valor</th>
                <th>Valor Total</th>
                <th>Ação</th>
            </tr>

            @foreach (var item in Model)
            {
                var valorUnitario = string.Format("{0:C}", item.Produto.Valor);
                var valorTotal = string.Format("{0:C}", (item.Produto.Valor * item.Quantidade));

                <tr data-item-id="@item.Id" class="deleteItem">
                    <td>@Html.DisplayFor(modelItem => item.Produto.Descricao)</td>
                    <td>@Html.DisplayFor(modelItem => item.Quantidade)</td>
                    <td>@Html.DisplayFor(modelItem => valorUnitario)</td>
                    <td>@Html.DisplayFor(modelItem => valorTotal)</td>
                    <td>@Html.ActionLink(" ", "Remover", new { id = item.Id }, new { @class = "glyphicon glyphicon-trash" })</td>
                </tr>
            }
        </table>
    </div>
</div>
    <br />

    <h2>Valor Total: @string.Format("{0:C}", Model.Sum(p => p.Produto.Valor * p.Quantidade))</h2>
